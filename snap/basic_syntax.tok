Token(kind=ud_comment, text="# imports", start=0, len=9)
Token(kind=ws_newline, text="\n", start=9, len=1)
#1: # imports

Token(kind=kw_from, text="from", start=10, len=4)
Token(kind=ud_identifier, text="__future__", start=15, len=10)
Token(kind=kw_import, text="import", start=26, len=6)
Token(kind=ud_identifier, text="annotations", start=33, len=11)
Token(kind=ws_newline, text="\n", start=44, len=1)
#2: from __future__ import annotations

Token(kind=kw_import, text="import", start=45, len=6)
Token(kind=ud_identifier, text="dataclasses", start=52, len=11)
Token(kind=kw_as, text="as", start=64, len=2)
Token(kind=ud_identifier, text="dc", start=67, len=2)
Token(kind=ws_newline, text="\n", start=69, len=1)
#3: import dataclasses as dc

Token(kind=ws_newline, text="\n", start=70, len=1)
#4: 

Token(kind=ud_comment, text="# int literals", start=71, len=14)
Token(kind=ws_newline, text="\n", start=85, len=1)
#5: # int literals

Token(kind=ud_identifier, text="i1", start=86, len=2)
Token(kind=sm_eq, text="=", start=89, len=1)
Token(kind=li_int, text="0", start=91, len=1)
Token(kind=ws_newline, text="\n", start=92, len=1)
#6: i1 = 0

Token(kind=ud_identifier, text="i2", start=93, len=2)
Token(kind=sm_eq, text="=", start=96, len=1)
Token(kind=li_int, text="10", start=98, len=2)
Token(kind=ws_newline, text="\n", start=100, len=1)
#7: i2 = 10

Token(kind=ud_identifier, text="b", start=101, len=1)
Token(kind=sm_eq, text="=", start=103, len=1)
Token(kind=li_int, text="100", start=105, len=3)
Token(kind=ws_newline, text="\n", start=108, len=1)
#8: b = 100

Token(kind=ud_identifier, text="i_", start=109, len=2)
Token(kind=sm_eq, text="=", start=112, len=1)
Token(kind=li_int, text="1_000_000", start=114, len=9)
Token(kind=ws_newline, text="\n", start=123, len=1)
#9: i_ = 1_000_000

Token(kind=ud_identifier, text="a", start=124, len=1)
Token(kind=sm_eq, text="=", start=126, len=1)
Token(kind=ud_identifier, text="b", start=128, len=1)
Token(kind=ws_newline, text="\n", start=129, len=1)
#10: a = b

Token(kind=ws_newline, text="\n", start=130, len=1)
#11: 

Token(kind=ud_comment, text="# float literals", start=131, len=16)
Token(kind=ws_newline, text="\n", start=147, len=1)
#12: # float literals

Token(kind=ud_identifier, text="floats", start=148, len=6)
Token(kind=sm_eq, text="=", start=155, len=1)
Token(kind=sm_lbrack, text="[", start=157, len=1)
Token(kind=ws_newline, text="\n", start=158, len=1)
#13: floats = [

Token(kind=ws_whitespace, text="    ", start=159, len=4)
Token(kind=li_float, text="0.0", start=163, len=3)
Token(kind=sm_comma, text=",", start=166, len=1)
Token(kind=ws_newline, text="\n", start=167, len=1)
#14:     0.0,

Token(kind=ws_whitespace, text="    ", start=168, len=4)
Token(kind=li_float, text=".0", start=172, len=2)
Token(kind=sm_comma, text=",", start=174, len=1)
Token(kind=ws_newline, text="\n", start=175, len=1)
#15:     .0,

Token(kind=ws_whitespace, text="    ", start=176, len=4)
Token(kind=li_float, text="0.", start=180, len=2)
Token(kind=sm_comma, text=",", start=182, len=1)
Token(kind=ws_newline, text="\n", start=183, len=1)
#16:     0.,

Token(kind=ws_whitespace, text="    ", start=184, len=4)
Token(kind=li_float, text="1e002", start=188, len=5)
Token(kind=sm_comma, text=",", start=193, len=1)
Token(kind=ws_newline, text="\n", start=194, len=1)
#17:     1e002,

Token(kind=ws_whitespace, text="    ", start=195, len=4)
Token(kind=li_float, text="1e-002", start=199, len=6)
Token(kind=sm_comma, text=",", start=205, len=1)
Token(kind=ws_newline, text="\n", start=206, len=1)
#18:     1e-002,

Token(kind=ws_whitespace, text="    ", start=207, len=4)
Token(kind=li_float, text="1E002", start=211, len=5)
Token(kind=sm_comma, text=",", start=216, len=1)
Token(kind=ws_newline, text="\n", start=217, len=1)
#19:     1E002,

Token(kind=ws_whitespace, text="    ", start=218, len=4)
Token(kind=li_float, text="1E-002", start=222, len=6)
Token(kind=sm_comma, text=",", start=228, len=1)
Token(kind=ws_newline, text="\n", start=229, len=1)
#20:     1E-002,

Token(kind=ws_whitespace, text="    ", start=230, len=4)
Token(kind=li_float, text="1.e10", start=234, len=5)
Token(kind=sm_comma, text=",", start=239, len=1)
Token(kind=ws_newline, text="\n", start=240, len=1)
#21:     1.e10,

Token(kind=ws_whitespace, text="    ", start=241, len=4)
Token(kind=li_float, text="1.0e10", start=245, len=6)
Token(kind=sm_comma, text=",", start=251, len=1)
Token(kind=ws_newline, text="\n", start=252, len=1)
#22:     1.0e10,

Token(kind=sm_rbrack, text="]", start=253, len=1)
Token(kind=ws_newline, text="\n", start=254, len=1)
#23: ]

Token(kind=ws_newline, text="\n", start=255, len=1)
#24: 

Token(kind=ud_comment, text="# other literals", start=256, len=16)
Token(kind=ws_newline, text="\n", start=272, len=1)
#25: # other literals

Token(kind=ud_identifier, text="bool_t", start=273, len=6)
Token(kind=sm_eq, text="=", start=280, len=1)
Token(kind=kw_true, text="True", start=282, len=4)
Token(kind=ws_newline, text="\n", start=286, len=1)
#26: bool_t = True

Token(kind=ud_identifier, text="bool_f", start=287, len=6)
Token(kind=sm_eq, text="=", start=294, len=1)
Token(kind=kw_false, text="False", start=296, len=5)
Token(kind=ws_newline, text="\n", start=301, len=1)
#27: bool_f = False

Token(kind=ud_identifier, text="none", start=302, len=4)
Token(kind=sm_eq, text="=", start=307, len=1)
Token(kind=kw_none, text="None", start=309, len=4)
Token(kind=ws_newline, text="\n", start=313, len=1)
#28: none = None

Token(kind=ud_identifier, text="imaginary", start=314, len=9)
Token(kind=sm_eq, text="=", start=324, len=1)
Token(kind=li_int, text="0", start=326, len=1)
Token(kind=ud_identifier, text="j", start=327, len=1)
Token(kind=ws_newline, text="\n", start=328, len=1)
#29: imaginary = 0j

Token(kind=ws_newline, text="\n", start=329, len=1)
#30: 

Token(kind=ud_comment, text="# dict literals", start=330, len=15)
Token(kind=ws_newline, text="\n", start=345, len=1)
#31: # dict literals

Token(kind=ud_identifier, text="c", start=346, len=1)
Token(kind=sm_eq, text="=", start=348, len=1)
Token(kind=sm_lbrace, text="{", start=350, len=1)
Token(kind=sm_rbrace, text="}", start=351, len=1)
Token(kind=ws_newline, text="\n", start=352, len=1)
#32: c = {}

Token(kind=ud_identifier, text="c", start=353, len=1)
Token(kind=sm_lbrack, text="[", start=354, len=1)
Token(kind=ud_identifier, text="a", start=355, len=1)
Token(kind=sm_rbrack, text="]", start=356, len=1)
Token(kind=sm_eq, text="=", start=358, len=1)
Token(kind=ud_identifier, text="b", start=360, len=1)
Token(kind=ws_newline, text="\n", start=361, len=1)
#33: c[a] = b

Token(kind=ws_newline, text="\n", start=362, len=1)
#34: 

Token(kind=ud_comment, text="# string literals", start=363, len=17)
Token(kind=ws_newline, text="\n", start=380, len=1)
#35: # string literals

Token(kind=ud_identifier, text="s1", start=381, len=2)
Token(kind=sm_eq, text="=", start=384, len=1)
Token(kind=li_str, text=""abc"", start=386, len=5)
Token(kind=ws_newline, text="\n", start=391, len=1)
#36: s1 = "abc"

Token(kind=ud_identifier, text="s1", start=392, len=2)
Token(kind=sm_eq, text="=", start=395, len=1)
Token(kind=li_str, text="'abc'", start=397, len=5)
Token(kind=ws_newline, text="\n", start=402, len=1)
#37: s1 = 'abc'

Token(kind=ud_identifier, text="s2", start=403, len=2)
Token(kind=sm_eq, text="=", start=406, len=1)
Token(kind=li_str, text="u"abc"", start=408, len=6)
Token(kind=ws_newline, text="\n", start=414, len=1)
#38: s2 = u"abc"

Token(kind=ud_identifier, text="s2", start=415, len=2)
Token(kind=sm_eq, text="=", start=418, len=1)
Token(kind=li_str, text="u'abc'", start=420, len=6)
Token(kind=ws_newline, text="\n", start=426, len=1)
#39: s2 = u'abc'

Token(kind=ud_identifier, text="fs", start=427, len=2)
Token(kind=sm_eq, text="=", start=430, len=1)
Token(kind=li_fstr, text="f"abc{a}"", start=432, len=9)
Token(kind=ws_newline, text="\n", start=441, len=1)
#40: fs = f"abc{a}"

Token(kind=ud_identifier, text="fs", start=442, len=2)
Token(kind=sm_eq, text="=", start=445, len=1)
Token(kind=li_fstr, text="f'abc{a}'", start=447, len=9)
Token(kind=ws_newline, text="\n", start=456, len=1)
#41: fs = f'abc{a}'

Token(kind=ud_identifier, text="bs", start=457, len=2)
Token(kind=sm_eq, text="=", start=460, len=1)
Token(kind=li_bytes, text="b"abc"", start=462, len=6)
Token(kind=ws_newline, text="\n", start=468, len=1)
#42: bs = b"abc"

Token(kind=ud_identifier, text="bs", start=469, len=2)
Token(kind=sm_eq, text="=", start=472, len=1)
Token(kind=li_bytes, text="b'abc'", start=474, len=6)
Token(kind=ws_newline, text="\n", start=480, len=1)
#43: bs = b'abc'

Token(kind=ud_identifier, text="b", start=481, len=1)
Token(kind=sm_eq, text="=", start=483, len=1)
Token(kind=li_int, text="1", start=485, len=1)
Token(kind=ws_newline, text="\n", start=486, len=1)
#44: b = 1

Token(kind=ud_identifier, text="f", start=487, len=1)
Token(kind=sm_eq, text="=", start=489, len=1)
Token(kind=li_int, text="1", start=491, len=1)
Token(kind=ws_newline, text="\n", start=492, len=1)
#45: f = 1

Token(kind=ud_identifier, text="u", start=493, len=1)
Token(kind=sm_eq, text="=", start=495, len=1)
Token(kind=li_int, text="1", start=497, len=1)
Token(kind=ws_newline, text="\n", start=498, len=1)
#46: u = 1

Token(kind=ud_identifier, text="msb", start=499, len=3)
Token(kind=sm_eq, text="=", start=503, len=1)
Token(kind=li_bytes, text="b"""I am a fat bytes literal."""", start=505, len=32)
Token(kind=ws_newline, text="\n", start=537, len=1)
#47: msb = b"""I am a fat bytes literal."""

Token(kind=ud_identifier, text="msf", start=538, len=3)
Token(kind=sm_eq, text="=", start=542, len=1)
Token(kind=li_fstr, text="f"""I am a fat f-string {b}."""", start=544, len=31)
Token(kind=ws_newline, text="\n", start=575, len=1)
#48: msf = f"""I am a fat f-string {b}."""

Token(kind=ud_identifier, text="ms1", start=576, len=3)
Token(kind=sm_eq, text="=", start=580, len=1)
Token(kind=li_str, text=""""I am a fat string with one line."""", start=582, len=38)
Token(kind=ws_newline, text="\n", start=620, len=1)
#49: ms1 = """I am a fat string with one line."""

Token(kind=ud_identifier, text="ms2", start=621, len=3)
Token(kind=sm_eq, text="=", start=625, len=1)
Token(kind=li_str, text=""""I am a fat string with multiple lines.

This is an escaped sequence: \"To be or not to be.\"
"""", start=627, len=99)
Token(kind=ws_newline, text="\n", start=726, len=1)
#50: ms2 = """I am a fat string with multiple lines.

This is an escaped sequence: \"To be or not to be.\"
"""

Token(kind=ws_newline, text="\n", start=727, len=1)
#51: 

Token(kind=ud_comment, text="# boolean", start=728, len=9)
Token(kind=ws_newline, text="\n", start=737, len=1)
#52: # boolean

Token(kind=ud_identifier, text="print", start=738, len=5)
Token(kind=sm_lparen, text="(", start=743, len=1)
Token(kind=kw_not, text="not", start=744, len=3)
Token(kind=ud_identifier, text="a", start=748, len=1)
Token(kind=sm_rparen, text=")", start=749, len=1)
Token(kind=ws_newline, text="\n", start=750, len=1)
#53: print(not a)

Token(kind=ud_identifier, text="print", start=751, len=5)
Token(kind=sm_lparen, text="(", start=756, len=1)
Token(kind=ud_identifier, text="a", start=757, len=1)
Token(kind=kw_and, text="and", start=759, len=3)
Token(kind=ud_identifier, text="b", start=763, len=1)
Token(kind=sm_rparen, text=")", start=764, len=1)
Token(kind=ws_newline, text="\n", start=765, len=1)
#54: print(a and b)

Token(kind=ud_identifier, text="print", start=766, len=5)
Token(kind=sm_lparen, text="(", start=771, len=1)
Token(kind=ud_identifier, text="a", start=772, len=1)
Token(kind=kw_or, text="or", start=774, len=2)
Token(kind=ud_identifier, text="b", start=777, len=1)
Token(kind=sm_rparen, text=")", start=778, len=1)
Token(kind=ws_newline, text="\n", start=779, len=1)
#55: print(a or b)

Token(kind=ud_identifier, text="print", start=780, len=5)
Token(kind=sm_lparen, text="(", start=785, len=1)
Token(kind=ud_identifier, text="a", start=786, len=1)
Token(kind=sm_twoeq, text="==", start=788, len=2)
Token(kind=ud_identifier, text="b", start=791, len=1)
Token(kind=sm_rparen, text=")", start=792, len=1)
Token(kind=ws_newline, text="\n", start=793, len=1)
#56: print(a == b)

Token(kind=ud_identifier, text="print", start=794, len=5)
Token(kind=sm_lparen, text="(", start=799, len=1)
Token(kind=ud_identifier, text="a", start=800, len=1)
Token(kind=sm_neq, text="!=", start=802, len=2)
Token(kind=ud_identifier, text="b", start=805, len=1)
Token(kind=sm_rparen, text=")", start=806, len=1)
Token(kind=ws_newline, text="\n", start=807, len=1)
#57: print(a != b)

Token(kind=ud_identifier, text="print", start=808, len=5)
Token(kind=sm_lparen, text="(", start=813, len=1)
Token(kind=ud_identifier, text="a", start=814, len=1)
Token(kind=sm_lt, text="<", start=816, len=1)
Token(kind=ud_identifier, text="b", start=818, len=1)
Token(kind=sm_rparen, text=")", start=819, len=1)
Token(kind=ws_newline, text="\n", start=820, len=1)
#58: print(a < b)

Token(kind=ud_identifier, text="print", start=821, len=5)
Token(kind=sm_lparen, text="(", start=826, len=1)
Token(kind=ud_identifier, text="a", start=827, len=1)
Token(kind=sm_lte, text="<=", start=829, len=2)
Token(kind=ud_identifier, text="b", start=832, len=1)
Token(kind=sm_rparen, text=")", start=833, len=1)
Token(kind=ws_newline, text="\n", start=834, len=1)
#59: print(a <= b)

Token(kind=ud_identifier, text="print", start=835, len=5)
Token(kind=sm_lparen, text="(", start=840, len=1)
Token(kind=ud_identifier, text="a", start=841, len=1)
Token(kind=sm_gt, text=">", start=843, len=1)
Token(kind=ud_identifier, text="b", start=845, len=1)
Token(kind=sm_rparen, text=")", start=846, len=1)
Token(kind=ws_newline, text="\n", start=847, len=1)
#60: print(a > b)

Token(kind=ud_identifier, text="print", start=848, len=5)
Token(kind=sm_lparen, text="(", start=853, len=1)
Token(kind=ud_identifier, text="a", start=854, len=1)
Token(kind=sm_gte, text=">=", start=856, len=2)
Token(kind=ud_identifier, text="b", start=859, len=1)
Token(kind=sm_rparen, text=")", start=860, len=1)
Token(kind=ws_newline, text="\n", start=861, len=1)
#61: print(a >= b)

Token(kind=ws_newline, text="\n", start=862, len=1)
#62: 

Token(kind=ud_comment, text="# maths", start=863, len=7)
Token(kind=ws_newline, text="\n", start=870, len=1)
#63: # maths

Token(kind=ud_identifier, text="print", start=871, len=5)
Token(kind=sm_lparen, text="(", start=876, len=1)
Token(kind=sm_plus, text="+", start=877, len=1)
Token(kind=ud_identifier, text="a", start=878, len=1)
Token(kind=sm_rparen, text=")", start=879, len=1)
Token(kind=ws_newline, text="\n", start=880, len=1)
#64: print(+a)

Token(kind=ud_identifier, text="print", start=881, len=5)
Token(kind=sm_lparen, text="(", start=886, len=1)
Token(kind=sm_minus, text="-", start=887, len=1)
Token(kind=ud_identifier, text="a", start=888, len=1)
Token(kind=sm_rparen, text=")", start=889, len=1)
Token(kind=ws_newline, text="\n", start=890, len=1)
#65: print(-a)

Token(kind=ud_identifier, text="print", start=891, len=5)
Token(kind=sm_lparen, text="(", start=896, len=1)
Token(kind=ud_identifier, text="a", start=897, len=1)
Token(kind=sm_plus, text="+", start=899, len=1)
Token(kind=ud_identifier, text="b", start=901, len=1)
Token(kind=sm_rparen, text=")", start=902, len=1)
Token(kind=ws_newline, text="\n", start=903, len=1)
#66: print(a + b)

Token(kind=ud_identifier, text="print", start=904, len=5)
Token(kind=sm_lparen, text="(", start=909, len=1)
Token(kind=ud_identifier, text="a", start=910, len=1)
Token(kind=sm_minus, text="-", start=912, len=1)
Token(kind=ud_identifier, text="b", start=914, len=1)
Token(kind=sm_rparen, text=")", start=915, len=1)
Token(kind=ws_newline, text="\n", start=916, len=1)
#67: print(a - b)

Token(kind=ud_identifier, text="print", start=917, len=5)
Token(kind=sm_lparen, text="(", start=922, len=1)
Token(kind=ud_identifier, text="a", start=923, len=1)
Token(kind=sm_star, text="*", start=925, len=1)
Token(kind=ud_identifier, text="b", start=927, len=1)
Token(kind=sm_rparen, text=")", start=928, len=1)
Token(kind=ws_newline, text="\n", start=929, len=1)
#68: print(a * b)

Token(kind=ud_identifier, text="print", start=930, len=5)
Token(kind=sm_lparen, text="(", start=935, len=1)
Token(kind=ud_identifier, text="a", start=936, len=1)
Token(kind=sm_slash, text="/", start=938, len=1)
Token(kind=ud_identifier, text="b", start=940, len=1)
Token(kind=sm_rparen, text=")", start=941, len=1)
Token(kind=ws_newline, text="\n", start=942, len=1)
#69: print(a / b)

Token(kind=ud_identifier, text="print", start=943, len=5)
Token(kind=sm_lparen, text="(", start=948, len=1)
Token(kind=ud_identifier, text="a", start=949, len=1)
Token(kind=sm_twoslash, text="//", start=951, len=2)
Token(kind=ud_identifier, text="b", start=954, len=1)
Token(kind=sm_rparen, text=")", start=955, len=1)
Token(kind=ws_newline, text="\n", start=956, len=1)
#70: print(a // b)

Token(kind=ud_identifier, text="print", start=957, len=5)
Token(kind=sm_lparen, text="(", start=962, len=1)
Token(kind=ud_identifier, text="a", start=963, len=1)
Token(kind=sm_percent, text="%", start=965, len=1)
Token(kind=ud_identifier, text="b", start=967, len=1)
Token(kind=sm_rparen, text=")", start=968, len=1)
Token(kind=ws_newline, text="\n", start=969, len=1)
#71: print(a % b)

Token(kind=ud_identifier, text="print", start=970, len=5)
Token(kind=sm_lparen, text="(", start=975, len=1)
Token(kind=ud_identifier, text="a", start=976, len=1)
Token(kind=sm_twostar, text="**", start=978, len=2)
Token(kind=ud_identifier, text="b", start=981, len=1)
Token(kind=sm_rparen, text=")", start=982, len=1)
Token(kind=ws_newline, text="\n", start=983, len=1)
#72: print(a ** b)

Token(kind=ud_comment, text="# TODO: matmul", start=984, len=14)
Token(kind=ws_newline, text="\n", start=998, len=1)
#73: # TODO: matmul

Token(kind=ws_newline, text="\n", start=999, len=1)
#74: 

Token(kind=ud_comment, text="# in-place maths", start=1000, len=16)
Token(kind=ws_newline, text="\n", start=1016, len=1)
#75: # in-place maths

Token(kind=ud_identifier, text="i1", start=1017, len=2)
Token(kind=sm_pluseq, text="+=", start=1020, len=2)
Token(kind=ud_identifier, text="a", start=1023, len=1)
Token(kind=ws_newline, text="\n", start=1024, len=1)
#76: i1 += a

Token(kind=ud_identifier, text="i1", start=1025, len=2)
Token(kind=sm_minuseq, text="-=", start=1028, len=2)
Token(kind=ud_identifier, text="a", start=1031, len=1)
Token(kind=ws_newline, text="\n", start=1032, len=1)
#77: i1 -= a

Token(kind=ud_identifier, text="i1", start=1033, len=2)
Token(kind=sm_stareq, text="*=", start=1036, len=2)
Token(kind=ud_identifier, text="a", start=1039, len=1)
Token(kind=ws_newline, text="\n", start=1040, len=1)
#78: i1 *= a

Token(kind=ud_identifier, text="i1", start=1041, len=2)
Token(kind=sm_slasheq, text="/=", start=1044, len=2)
Token(kind=ud_identifier, text="a", start=1047, len=1)
Token(kind=ws_newline, text="\n", start=1048, len=1)
#79: i1 /= a

Token(kind=ud_identifier, text="i1", start=1049, len=2)
Token(kind=sm_twoslasheq, text="//=", start=1052, len=3)
Token(kind=ud_identifier, text="a", start=1056, len=1)
Token(kind=ws_newline, text="\n", start=1057, len=1)
#80: i1 //= a

Token(kind=ud_identifier, text="i1", start=1058, len=2)
Token(kind=sm_percenteq, text="%=", start=1061, len=2)
Token(kind=ud_identifier, text="a", start=1064, len=1)
Token(kind=ws_newline, text="\n", start=1065, len=1)
#81: i1 %= a

Token(kind=ud_identifier, text="i1", start=1066, len=2)
Token(kind=sm_twostareq, text="**=", start=1069, len=3)
Token(kind=ud_identifier, text="a", start=1073, len=1)
Token(kind=ws_newline, text="\n", start=1074, len=1)
#82: i1 **= a

Token(kind=ud_comment, text="# TODO: matmul", start=1075, len=14)
Token(kind=ws_newline, text="\n", start=1089, len=1)
#83: # TODO: matmul

Token(kind=ws_newline, text="\n", start=1090, len=1)
#84: 

Token(kind=ud_comment, text="# bitwise", start=1091, len=9)
Token(kind=ws_newline, text="\n", start=1100, len=1)
#85: # bitwise

Token(kind=ud_identifier, text="print", start=1101, len=5)
Token(kind=sm_lparen, text="(", start=1106, len=1)
Token(kind=sm_tilde, text="~", start=1107, len=1)
Token(kind=ud_identifier, text="a", start=1108, len=1)
Token(kind=sm_rparen, text=")", start=1109, len=1)
Token(kind=ws_newline, text="\n", start=1110, len=1)
#86: print(~a)

Token(kind=ud_identifier, text="print", start=1111, len=5)
Token(kind=sm_lparen, text="(", start=1116, len=1)
Token(kind=ud_identifier, text="a", start=1117, len=1)
Token(kind=sm_ampersand, text="&", start=1119, len=1)
Token(kind=ud_identifier, text="b", start=1121, len=1)
Token(kind=sm_rparen, text=")", start=1122, len=1)
Token(kind=ws_newline, text="\n", start=1123, len=1)
#87: print(a & b)

Token(kind=ud_identifier, text="print", start=1124, len=5)
Token(kind=sm_lparen, text="(", start=1129, len=1)
Token(kind=ud_identifier, text="a", start=1130, len=1)
Token(kind=sm_pipe, text="|", start=1132, len=1)
Token(kind=ud_identifier, text="b", start=1134, len=1)
Token(kind=sm_rparen, text=")", start=1135, len=1)
Token(kind=ws_newline, text="\n", start=1136, len=1)
#88: print(a | b)

Token(kind=ud_identifier, text="print", start=1137, len=5)
Token(kind=sm_lparen, text="(", start=1142, len=1)
Token(kind=ud_identifier, text="a", start=1143, len=1)
Token(kind=sm_hat, text="^", start=1145, len=1)
Token(kind=ud_identifier, text="b", start=1147, len=1)
Token(kind=sm_rparen, text=")", start=1148, len=1)
Token(kind=ws_newline, text="\n", start=1149, len=1)
#89: print(a ^ b)

Token(kind=ud_identifier, text="print", start=1150, len=5)
Token(kind=sm_lparen, text="(", start=1155, len=1)
Token(kind=ud_identifier, text="a", start=1156, len=1)
Token(kind=sm_lshift, text="<<", start=1158, len=2)
Token(kind=ud_identifier, text="b", start=1161, len=1)
Token(kind=sm_rparen, text=")", start=1162, len=1)
Token(kind=ws_newline, text="\n", start=1163, len=1)
#90: print(a << b)

Token(kind=ud_identifier, text="print", start=1164, len=5)
Token(kind=sm_lparen, text="(", start=1169, len=1)
Token(kind=ud_identifier, text="a", start=1170, len=1)
Token(kind=sm_rshift, text=">>", start=1172, len=2)
Token(kind=ud_identifier, text="b", start=1175, len=1)
Token(kind=sm_rparen, text=")", start=1176, len=1)
Token(kind=ws_newline, text="\n", start=1177, len=1)
#91: print(a >> b)

Token(kind=ws_newline, text="\n", start=1178, len=1)
#92: 

Token(kind=ud_comment, text="# in-place bitwise", start=1179, len=18)
Token(kind=ws_newline, text="\n", start=1197, len=1)
#93: # in-place bitwise

Token(kind=ud_identifier, text="i2", start=1198, len=2)
Token(kind=sm_ampersandeq, text="&=", start=1201, len=2)
Token(kind=ud_identifier, text="a", start=1204, len=1)
Token(kind=ws_newline, text="\n", start=1205, len=1)
#94: i2 &= a

Token(kind=ud_identifier, text="i2", start=1206, len=2)
Token(kind=sm_pipeeq, text="|=", start=1209, len=2)
Token(kind=ud_identifier, text="a", start=1212, len=1)
Token(kind=ws_newline, text="\n", start=1213, len=1)
#95: i2 |= a

Token(kind=ud_identifier, text="i2", start=1214, len=2)
Token(kind=sm_hateq, text="^=", start=1217, len=2)
Token(kind=ud_identifier, text="a", start=1220, len=1)
Token(kind=ws_newline, text="\n", start=1221, len=1)
#96: i2 ^= a

Token(kind=ud_identifier, text="i2", start=1222, len=2)
Token(kind=sm_lshifteq, text="<<=", start=1225, len=3)
Token(kind=ud_identifier, text="a", start=1229, len=1)
Token(kind=ws_newline, text="\n", start=1230, len=1)
#97: i2 <<= a

Token(kind=ud_identifier, text="i2", start=1231, len=2)
Token(kind=sm_rshifteq, text=">>=", start=1234, len=3)
Token(kind=ud_identifier, text="a", start=1238, len=1)
Token(kind=ws_newline, text="\n", start=1239, len=1)
#98: i2 >>= a

Token(kind=ws_newline, text="\n", start=1240, len=1)
#99: 

Token(kind=ud_comment, text="# identity", start=1241, len=10)
Token(kind=ws_newline, text="\n", start=1251, len=1)
#100: # identity

Token(kind=ud_identifier, text="print", start=1252, len=5)
Token(kind=sm_lparen, text="(", start=1257, len=1)
Token(kind=ud_identifier, text="a", start=1258, len=1)
Token(kind=kw_is, text="is", start=1260, len=2)
Token(kind=ud_identifier, text="b", start=1263, len=1)
Token(kind=sm_rparen, text=")", start=1264, len=1)
Token(kind=ws_newline, text="\n", start=1265, len=1)
#101: print(a is b)

Token(kind=ud_identifier, text="print", start=1266, len=5)
Token(kind=sm_lparen, text="(", start=1271, len=1)
Token(kind=ud_identifier, text="a", start=1272, len=1)
Token(kind=kw_is, text="is", start=1274, len=2)
Token(kind=kw_not, text="not", start=1277, len=3)
Token(kind=ud_identifier, text="b", start=1281, len=1)
Token(kind=sm_rparen, text=")", start=1282, len=1)
Token(kind=ws_newline, text="\n", start=1283, len=1)
#102: print(a is not b)

Token(kind=ws_newline, text="\n", start=1284, len=1)
#103: 

Token(kind=ud_comment, text="# collections", start=1285, len=13)
Token(kind=ws_newline, text="\n", start=1298, len=1)
#104: # collections

Token(kind=ud_identifier, text="print", start=1299, len=5)
Token(kind=sm_lparen, text="(", start=1304, len=1)
Token(kind=ud_identifier, text="a", start=1305, len=1)
Token(kind=kw_in, text="in", start=1307, len=2)
Token(kind=ud_identifier, text="c", start=1310, len=1)
Token(kind=sm_rparen, text=")", start=1311, len=1)
Token(kind=ws_newline, text="\n", start=1312, len=1)
#105: print(a in c)

Token(kind=ud_identifier, text="print", start=1313, len=5)
Token(kind=sm_lparen, text="(", start=1318, len=1)
Token(kind=ud_identifier, text="a", start=1319, len=1)
Token(kind=kw_not, text="not", start=1321, len=3)
Token(kind=kw_in, text="in", start=1325, len=2)
Token(kind=ud_identifier, text="c", start=1328, len=1)
Token(kind=sm_rparen, text=")", start=1329, len=1)
Token(kind=ws_newline, text="\n", start=1330, len=1)
#106: print(a not in c)

Token(kind=ud_identifier, text="print", start=1331, len=5)
Token(kind=sm_lparen, text="(", start=1336, len=1)
Token(kind=ud_identifier, text="c", start=1337, len=1)
Token(kind=sm_lbrack, text="[", start=1338, len=1)
Token(kind=ud_identifier, text="a", start=1339, len=1)
Token(kind=sm_rbrack, text="]", start=1340, len=1)
Token(kind=sm_rparen, text=")", start=1341, len=1)
Token(kind=ws_newline, text="\n", start=1342, len=1)
#107: print(c[a])

Token(kind=kw_del, text="del", start=1343, len=3)
Token(kind=ud_identifier, text="c", start=1347, len=1)
Token(kind=sm_lbrack, text="[", start=1348, len=1)
Token(kind=ud_identifier, text="a", start=1349, len=1)
Token(kind=sm_rbrack, text="]", start=1350, len=1)
Token(kind=ws_newline, text="\n", start=1351, len=1)
#108: del c[a]

Token(kind=ws_newline, text="\n", start=1352, len=1)
#109: 

Token(kind=ud_comment, text="# functions", start=1353, len=11)
Token(kind=ws_newline, text="\n", start=1364, len=1)
#110: # functions

Token(kind=kw_def, text="def", start=1365, len=3)
Token(kind=ud_identifier, text="add", start=1369, len=3)
Token(kind=sm_lparen, text="(", start=1372, len=1)
Token(kind=ud_identifier, text="a", start=1373, len=1)
Token(kind=sm_colon, text=":", start=1374, len=1)
Token(kind=ud_identifier, text="int", start=1376, len=3)
Token(kind=sm_comma, text=",", start=1379, len=1)
Token(kind=ud_identifier, text="b", start=1381, len=1)
Token(kind=sm_colon, text=":", start=1382, len=1)
Token(kind=ud_identifier, text="int", start=1384, len=3)
Token(kind=sm_rparen, text=")", start=1387, len=1)
Token(kind=sm_arrow, text="->", start=1389, len=2)
Token(kind=ud_identifier, text="int", start=1392, len=3)
Token(kind=sm_colon, text=":", start=1395, len=1)
Token(kind=ws_newline, text="\n", start=1396, len=1)
#111: def add(a: int, b: int) -> int:

Token(kind=ws_whitespace, text="    ", start=1397, len=4)
Token(kind=kw_return, text="return", start=1401, len=6)
Token(kind=ud_identifier, text="a", start=1408, len=1)
Token(kind=sm_plus, text="+", start=1410, len=1)
Token(kind=ud_identifier, text="b", start=1412, len=1)
Token(kind=ws_newline, text="\n", start=1413, len=1)
#112:     return a + b

Token(kind=ws_newline, text="\n", start=1414, len=1)
#113: 

Token(kind=ud_comment, text="# classes and decorators", start=1415, len=24)
Token(kind=ws_newline, text="\n", start=1439, len=1)
#114: # classes and decorators

Token(kind=sm_at, text="@", start=1440, len=1)
Token(kind=ud_identifier, text="dc", start=1441, len=2)
Token(kind=sm_dot, text=".", start=1443, len=1)
Token(kind=ud_identifier, text="dataclass", start=1444, len=9)
Token(kind=sm_lparen, text="(", start=1453, len=1)
Token(kind=ud_identifier, text="frozen", start=1454, len=6)
Token(kind=sm_eq, text="=", start=1460, len=1)
Token(kind=kw_true, text="True", start=1461, len=4)
Token(kind=sm_rparen, text=")", start=1465, len=1)
Token(kind=ws_newline, text="\n", start=1466, len=1)
#115: @dc.dataclass(frozen=True)

Token(kind=kw_class, text="class", start=1467, len=5)
Token(kind=ud_identifier, text="MyClass", start=1473, len=7)
Token(kind=sm_colon, text=":", start=1480, len=1)
Token(kind=ws_newline, text="\n", start=1481, len=1)
#116: class MyClass:

Token(kind=ws_whitespace, text="    ", start=1482, len=4)
Token(kind=ud_identifier, text="a", start=1486, len=1)
Token(kind=sm_colon, text=":", start=1487, len=1)
Token(kind=ud_identifier, text="int", start=1489, len=3)
Token(kind=ws_newline, text="\n", start=1492, len=1)
#117:     a: int

Token(kind=ws_whitespace, text="    ", start=1493, len=4)
Token(kind=ud_identifier, text="b", start=1497, len=1)
Token(kind=sm_colon, text=":", start=1498, len=1)
Token(kind=ud_identifier, text="bool", start=1500, len=4)
Token(kind=ws_newline, text="\n", start=1504, len=1)
#118:     b: bool

