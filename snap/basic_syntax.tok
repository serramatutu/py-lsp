Token(kind=ud_comment, text="# imports", start=0, len=9)
Token(kind=ws_newline, text="\n", start=9, len=1)
#1: # imports

Token(kind=kw_from, text="from", start=10, len=4)
Token(kind=ud_identifier, text="__future__", start=15, len=10)
Token(kind=kw_import, text="import", start=26, len=6)
Token(kind=ud_identifier, text="annotations", start=33, len=11)
Token(kind=ws_newline, text="\n", start=44, len=1)
#2: from __future__ import annotations

Token(kind=kw_import, text="import", start=45, len=6)
Token(kind=ud_identifier, text="dataclasses", start=52, len=11)
Token(kind=kw_as, text="as", start=64, len=2)
Token(kind=ud_identifier, text="dc", start=67, len=2)
Token(kind=ws_newline, text="\n", start=69, len=1)
#3: import dataclasses as dc

Token(kind=ws_newline, text="\n", start=70, len=1)
#4: 

Token(kind=ud_comment, text="# int literals", start=71, len=14)
Token(kind=ws_newline, text="\n", start=85, len=1)
#5: # int literals

Token(kind=ud_identifier, text="i1", start=86, len=2)
Token(kind=sm_eq, text="=", start=89, len=1)
Token(kind=li_int, text="0", start=91, len=1)
Token(kind=ws_newline, text="\n", start=92, len=1)
#6: i1 = 0

Token(kind=ud_identifier, text="i2", start=93, len=2)
Token(kind=sm_eq, text="=", start=96, len=1)
Token(kind=li_int, text="10", start=98, len=2)
Token(kind=ws_newline, text="\n", start=100, len=1)
#7: i2 = 10

Token(kind=ud_identifier, text="b", start=101, len=1)
Token(kind=sm_eq, text="=", start=103, len=1)
Token(kind=li_int, text="100", start=105, len=3)
Token(kind=ws_newline, text="\n", start=108, len=1)
#8: b = 100

Token(kind=ud_identifier, text="i_", start=109, len=2)
Token(kind=sm_eq, text="=", start=112, len=1)
Token(kind=li_int, text="1_000_000", start=114, len=9)
Token(kind=ws_newline, text="\n", start=123, len=1)
#9: i_ = 1_000_000

Token(kind=ud_identifier, text="a", start=124, len=1)
Token(kind=sm_eq, text="=", start=126, len=1)
Token(kind=ud_identifier, text="b", start=128, len=1)
Token(kind=ws_newline, text="\n", start=129, len=1)
#10: a = b

Token(kind=ws_newline, text="\n", start=130, len=1)
#11: 

Token(kind=ud_comment, text="# float literals", start=131, len=16)
Token(kind=ws_newline, text="\n", start=147, len=1)
#12: # float literals

Token(kind=ud_identifier, text="floats", start=148, len=6)
Token(kind=sm_eq, text="=", start=155, len=1)
Token(kind=sm_lbrack, text="[", start=157, len=1)
Token(kind=ws_newline, text="\n", start=158, len=1)
#13: floats = [

Token(kind=ws_whitespace, text="    ", start=159, len=4)
Token(kind=li_float, text="0.0", start=163, len=3)
Token(kind=sm_comma, text=",", start=166, len=1)
Token(kind=ws_newline, text="\n", start=167, len=1)
#14:     0.0,

Token(kind=ws_whitespace, text="    ", start=168, len=4)
Token(kind=li_float, text=".0", start=172, len=2)
Token(kind=sm_comma, text=",", start=174, len=1)
Token(kind=ws_newline, text="\n", start=175, len=1)
#15:     .0,

Token(kind=ws_whitespace, text="    ", start=176, len=4)
Token(kind=li_float, text="0.", start=180, len=2)
Token(kind=sm_comma, text=",", start=182, len=1)
Token(kind=ws_newline, text="\n", start=183, len=1)
#16:     0.,

Token(kind=ws_whitespace, text="    ", start=184, len=4)
Token(kind=li_float, text="1e002", start=188, len=5)
Token(kind=sm_comma, text=",", start=193, len=1)
Token(kind=ws_newline, text="\n", start=194, len=1)
#17:     1e002,

Token(kind=ws_whitespace, text="    ", start=195, len=4)
Token(kind=li_float, text="1e-002", start=199, len=6)
Token(kind=sm_comma, text=",", start=205, len=1)
Token(kind=ws_newline, text="\n", start=206, len=1)
#18:     1e-002,

Token(kind=ws_whitespace, text="    ", start=207, len=4)
Token(kind=li_float, text="1E002", start=211, len=5)
Token(kind=sm_comma, text=",", start=216, len=1)
Token(kind=ws_newline, text="\n", start=217, len=1)
#19:     1E002,

Token(kind=ws_whitespace, text="    ", start=218, len=4)
Token(kind=li_float, text="1E-002", start=222, len=6)
Token(kind=sm_comma, text=",", start=228, len=1)
Token(kind=ws_newline, text="\n", start=229, len=1)
#20:     1E-002,

Token(kind=ws_whitespace, text="    ", start=230, len=4)
Token(kind=li_float, text="1.e10", start=234, len=5)
Token(kind=sm_comma, text=",", start=239, len=1)
Token(kind=ws_newline, text="\n", start=240, len=1)
#21:     1.e10,

Token(kind=ws_whitespace, text="    ", start=241, len=4)
Token(kind=li_float, text="1.0e10", start=245, len=6)
Token(kind=sm_comma, text=",", start=251, len=1)
Token(kind=ws_newline, text="\n", start=252, len=1)
#22:     1.0e10,

Token(kind=sm_rbrack, text="]", start=253, len=1)
Token(kind=ws_newline, text="\n", start=254, len=1)
#23: ]

Token(kind=ws_newline, text="\n", start=255, len=1)
#24: 

Token(kind=ud_comment, text="# other literals", start=256, len=16)
Token(kind=ws_newline, text="\n", start=272, len=1)
#25: # other literals

Token(kind=ud_identifier, text="bool_t", start=273, len=6)
Token(kind=sm_eq, text="=", start=280, len=1)
Token(kind=kw_true, text="True", start=282, len=4)
Token(kind=ws_newline, text="\n", start=286, len=1)
#26: bool_t = True

Token(kind=ud_identifier, text="bool_f", start=287, len=6)
Token(kind=sm_eq, text="=", start=294, len=1)
Token(kind=kw_false, text="False", start=296, len=5)
Token(kind=ws_newline, text="\n", start=301, len=1)
#27: bool_f = False

Token(kind=ud_identifier, text="none", start=302, len=4)
Token(kind=sm_eq, text="=", start=307, len=1)
Token(kind=kw_none, text="None", start=309, len=4)
Token(kind=ws_newline, text="\n", start=313, len=1)
#28: none = None

Token(kind=ud_identifier, text="imaginary", start=314, len=9)
Token(kind=sm_eq, text="=", start=324, len=1)
Token(kind=li_int, text="0", start=326, len=1)
Token(kind=ud_identifier, text="j", start=327, len=1)
Token(kind=ws_newline, text="\n", start=328, len=1)
#29: imaginary = 0j

Token(kind=ws_newline, text="\n", start=329, len=1)
#30: 

Token(kind=ws_newline, text="\n", start=330, len=1)
#31: 

Token(kind=ud_comment, text="# dict literals", start=331, len=15)
Token(kind=ws_newline, text="\n", start=346, len=1)
#32: # dict literals

Token(kind=ud_identifier, text="c", start=347, len=1)
Token(kind=sm_eq, text="=", start=349, len=1)
Token(kind=sm_lbrace, text="{", start=351, len=1)
Token(kind=sm_rbrace, text="}", start=352, len=1)
Token(kind=ws_newline, text="\n", start=353, len=1)
#33: c = {}

Token(kind=ud_identifier, text="c", start=354, len=1)
Token(kind=sm_lbrack, text="[", start=355, len=1)
Token(kind=ud_identifier, text="a", start=356, len=1)
Token(kind=sm_rbrack, text="]", start=357, len=1)
Token(kind=sm_eq, text="=", start=359, len=1)
Token(kind=ud_identifier, text="b", start=361, len=1)
Token(kind=ws_newline, text="\n", start=362, len=1)
#34: c[a] = b

Token(kind=ws_newline, text="\n", start=363, len=1)
#35: 

Token(kind=ud_comment, text="# string literals", start=364, len=17)
Token(kind=ws_newline, text="\n", start=381, len=1)
#36: # string literals

Token(kind=ud_identifier, text="s1", start=382, len=2)
Token(kind=sm_eq, text="=", start=385, len=1)
Token(kind=li_str, text=""abc"", start=387, len=5)
Token(kind=ws_newline, text="\n", start=392, len=1)
#37: s1 = "abc"

Token(kind=ud_identifier, text="s1", start=393, len=2)
Token(kind=sm_eq, text="=", start=396, len=1)
Token(kind=li_str, text="'abc'", start=398, len=5)
Token(kind=ws_newline, text="\n", start=403, len=1)
#38: s1 = 'abc'

Token(kind=ud_identifier, text="s2", start=404, len=2)
Token(kind=sm_eq, text="=", start=407, len=1)
Token(kind=li_str, text="u"abc"", start=409, len=6)
Token(kind=ws_newline, text="\n", start=415, len=1)
#39: s2 = u"abc"

Token(kind=ud_identifier, text="s2", start=416, len=2)
Token(kind=sm_eq, text="=", start=419, len=1)
Token(kind=li_str, text="u'abc'", start=421, len=6)
Token(kind=ws_newline, text="\n", start=427, len=1)
#40: s2 = u'abc'

Token(kind=ud_identifier, text="fs", start=428, len=2)
Token(kind=sm_eq, text="=", start=431, len=1)
Token(kind=li_fstr, text="f"abc{a}"", start=433, len=9)
Token(kind=ws_newline, text="\n", start=442, len=1)
#41: fs = f"abc{a}"

Token(kind=ud_identifier, text="fs", start=443, len=2)
Token(kind=sm_eq, text="=", start=446, len=1)
Token(kind=li_fstr, text="f'abc{a}'", start=448, len=9)
Token(kind=ws_newline, text="\n", start=457, len=1)
#42: fs = f'abc{a}'

Token(kind=ud_identifier, text="bs", start=458, len=2)
Token(kind=sm_eq, text="=", start=461, len=1)
Token(kind=li_bytes, text="b"abc"", start=463, len=6)
Token(kind=ws_newline, text="\n", start=469, len=1)
#43: bs = b"abc"

Token(kind=ud_identifier, text="bs", start=470, len=2)
Token(kind=sm_eq, text="=", start=473, len=1)
Token(kind=li_bytes, text="b'abc'", start=475, len=6)
Token(kind=ws_newline, text="\n", start=481, len=1)
#44: bs = b'abc'

Token(kind=ud_identifier, text="b", start=482, len=1)
Token(kind=sm_eq, text="=", start=484, len=1)
Token(kind=li_int, text="1", start=486, len=1)
Token(kind=ws_newline, text="\n", start=487, len=1)
#45: b = 1

Token(kind=ud_identifier, text="f", start=488, len=1)
Token(kind=sm_eq, text="=", start=490, len=1)
Token(kind=li_int, text="1", start=492, len=1)
Token(kind=ws_newline, text="\n", start=493, len=1)
#46: f = 1

Token(kind=ud_identifier, text="u", start=494, len=1)
Token(kind=sm_eq, text="=", start=496, len=1)
Token(kind=li_int, text="1", start=498, len=1)
Token(kind=ws_newline, text="\n", start=499, len=1)
#47: u = 1

Token(kind=ud_identifier, text="msb", start=500, len=3)
Token(kind=sm_eq, text="=", start=504, len=1)
Token(kind=li_bytes, text="b"""I am a fat bytes literal."""", start=506, len=32)
Token(kind=ws_newline, text="\n", start=538, len=1)
#48: msb = b"""I am a fat bytes literal."""

Token(kind=ud_identifier, text="msf", start=539, len=3)
Token(kind=sm_eq, text="=", start=543, len=1)
Token(kind=li_fstr, text="f"""I am a fat f-string {b}."""", start=545, len=31)
Token(kind=ws_newline, text="\n", start=576, len=1)
#49: msf = f"""I am a fat f-string {b}."""

Token(kind=ud_identifier, text="ms1", start=577, len=3)
Token(kind=sm_eq, text="=", start=581, len=1)
Token(kind=li_str, text=""""I am a fat string with one line."""", start=583, len=38)
Token(kind=ws_newline, text="\n", start=621, len=1)
#50: ms1 = """I am a fat string with one line."""

Token(kind=ud_identifier, text="ms2", start=622, len=3)
Token(kind=sm_eq, text="=", start=626, len=1)
Token(kind=li_str, text=""""I am a fat string with multiple lines.

This is an escaped sequence: \"To be or not to be.\"
"""", start=628, len=99)
Token(kind=ws_newline, text="\n", start=727, len=1)
#51: ms2 = """I am a fat string with multiple lines.

This is an escaped sequence: \"To be or not to be.\"
"""

Token(kind=ws_newline, text="\n", start=728, len=1)
#52: 

Token(kind=ud_comment, text="# boolean", start=729, len=9)
Token(kind=ws_newline, text="\n", start=738, len=1)
#53: # boolean

Token(kind=ud_identifier, text="print", start=739, len=5)
Token(kind=sm_lparen, text="(", start=744, len=1)
Token(kind=kw_not, text="not", start=745, len=3)
Token(kind=ud_identifier, text="a", start=749, len=1)
Token(kind=sm_rparen, text=")", start=750, len=1)
Token(kind=ws_newline, text="\n", start=751, len=1)
#54: print(not a)

Token(kind=ud_identifier, text="print", start=752, len=5)
Token(kind=sm_lparen, text="(", start=757, len=1)
Token(kind=ud_identifier, text="a", start=758, len=1)
Token(kind=kw_and, text="and", start=760, len=3)
Token(kind=ud_identifier, text="b", start=764, len=1)
Token(kind=sm_rparen, text=")", start=765, len=1)
Token(kind=ws_newline, text="\n", start=766, len=1)
#55: print(a and b)

Token(kind=ud_identifier, text="print", start=767, len=5)
Token(kind=sm_lparen, text="(", start=772, len=1)
Token(kind=ud_identifier, text="a", start=773, len=1)
Token(kind=kw_or, text="or", start=775, len=2)
Token(kind=ud_identifier, text="b", start=778, len=1)
Token(kind=sm_rparen, text=")", start=779, len=1)
Token(kind=ws_newline, text="\n", start=780, len=1)
#56: print(a or b)

Token(kind=ud_identifier, text="print", start=781, len=5)
Token(kind=sm_lparen, text="(", start=786, len=1)
Token(kind=ud_identifier, text="a", start=787, len=1)
Token(kind=sm_twoeq, text="==", start=789, len=2)
Token(kind=ud_identifier, text="b", start=792, len=1)
Token(kind=sm_rparen, text=")", start=793, len=1)
Token(kind=ws_newline, text="\n", start=794, len=1)
#57: print(a == b)

Token(kind=ud_identifier, text="print", start=795, len=5)
Token(kind=sm_lparen, text="(", start=800, len=1)
Token(kind=ud_identifier, text="a", start=801, len=1)
Token(kind=sm_neq, text="!=", start=803, len=2)
Token(kind=ud_identifier, text="b", start=806, len=1)
Token(kind=sm_rparen, text=")", start=807, len=1)
Token(kind=ws_newline, text="\n", start=808, len=1)
#58: print(a != b)

Token(kind=ud_identifier, text="print", start=809, len=5)
Token(kind=sm_lparen, text="(", start=814, len=1)
Token(kind=ud_identifier, text="a", start=815, len=1)
Token(kind=sm_lt, text="<", start=817, len=1)
Token(kind=ud_identifier, text="b", start=819, len=1)
Token(kind=sm_rparen, text=")", start=820, len=1)
Token(kind=ws_newline, text="\n", start=821, len=1)
#59: print(a < b)

Token(kind=ud_identifier, text="print", start=822, len=5)
Token(kind=sm_lparen, text="(", start=827, len=1)
Token(kind=ud_identifier, text="a", start=828, len=1)
Token(kind=sm_lte, text="<=", start=830, len=2)
Token(kind=ud_identifier, text="b", start=833, len=1)
Token(kind=sm_rparen, text=")", start=834, len=1)
Token(kind=ws_newline, text="\n", start=835, len=1)
#60: print(a <= b)

Token(kind=ud_identifier, text="print", start=836, len=5)
Token(kind=sm_lparen, text="(", start=841, len=1)
Token(kind=ud_identifier, text="a", start=842, len=1)
Token(kind=sm_gt, text=">", start=844, len=1)
Token(kind=ud_identifier, text="b", start=846, len=1)
Token(kind=sm_rparen, text=")", start=847, len=1)
Token(kind=ws_newline, text="\n", start=848, len=1)
#61: print(a > b)

Token(kind=ud_identifier, text="print", start=849, len=5)
Token(kind=sm_lparen, text="(", start=854, len=1)
Token(kind=ud_identifier, text="a", start=855, len=1)
Token(kind=sm_gte, text=">=", start=857, len=2)
Token(kind=ud_identifier, text="b", start=860, len=1)
Token(kind=sm_rparen, text=")", start=861, len=1)
Token(kind=ws_newline, text="\n", start=862, len=1)
#62: print(a >= b)

Token(kind=ws_newline, text="\n", start=863, len=1)
#63: 

Token(kind=ud_comment, text="# maths", start=864, len=7)
Token(kind=ws_newline, text="\n", start=871, len=1)
#64: # maths

Token(kind=ud_identifier, text="print", start=872, len=5)
Token(kind=sm_lparen, text="(", start=877, len=1)
Token(kind=sm_plus, text="+", start=878, len=1)
Token(kind=ud_identifier, text="a", start=879, len=1)
Token(kind=sm_rparen, text=")", start=880, len=1)
Token(kind=ws_newline, text="\n", start=881, len=1)
#65: print(+a)

Token(kind=ud_identifier, text="print", start=882, len=5)
Token(kind=sm_lparen, text="(", start=887, len=1)
Token(kind=sm_minus, text="-", start=888, len=1)
Token(kind=ud_identifier, text="a", start=889, len=1)
Token(kind=sm_rparen, text=")", start=890, len=1)
Token(kind=ws_newline, text="\n", start=891, len=1)
#66: print(-a)

Token(kind=ud_identifier, text="print", start=892, len=5)
Token(kind=sm_lparen, text="(", start=897, len=1)
Token(kind=ud_identifier, text="a", start=898, len=1)
Token(kind=sm_plus, text="+", start=900, len=1)
Token(kind=ud_identifier, text="b", start=902, len=1)
Token(kind=sm_rparen, text=")", start=903, len=1)
Token(kind=ws_newline, text="\n", start=904, len=1)
#67: print(a + b)

Token(kind=ud_identifier, text="print", start=905, len=5)
Token(kind=sm_lparen, text="(", start=910, len=1)
Token(kind=ud_identifier, text="a", start=911, len=1)
Token(kind=sm_minus, text="-", start=913, len=1)
Token(kind=ud_identifier, text="b", start=915, len=1)
Token(kind=sm_rparen, text=")", start=916, len=1)
Token(kind=ws_newline, text="\n", start=917, len=1)
#68: print(a - b)

Token(kind=ud_identifier, text="print", start=918, len=5)
Token(kind=sm_lparen, text="(", start=923, len=1)
Token(kind=ud_identifier, text="a", start=924, len=1)
Token(kind=sm_star, text="*", start=926, len=1)
Token(kind=ud_identifier, text="b", start=928, len=1)
Token(kind=sm_rparen, text=")", start=929, len=1)
Token(kind=ws_newline, text="\n", start=930, len=1)
#69: print(a * b)

Token(kind=ud_identifier, text="print", start=931, len=5)
Token(kind=sm_lparen, text="(", start=936, len=1)
Token(kind=ud_identifier, text="a", start=937, len=1)
Token(kind=sm_slash, text="/", start=939, len=1)
Token(kind=ud_identifier, text="b", start=941, len=1)
Token(kind=sm_rparen, text=")", start=942, len=1)
Token(kind=ws_newline, text="\n", start=943, len=1)
#70: print(a / b)

Token(kind=ud_identifier, text="print", start=944, len=5)
Token(kind=sm_lparen, text="(", start=949, len=1)
Token(kind=ud_identifier, text="a", start=950, len=1)
Token(kind=sm_twoslash, text="//", start=952, len=2)
Token(kind=ud_identifier, text="b", start=955, len=1)
Token(kind=sm_rparen, text=")", start=956, len=1)
Token(kind=ws_newline, text="\n", start=957, len=1)
#71: print(a // b)

Token(kind=ud_identifier, text="print", start=958, len=5)
Token(kind=sm_lparen, text="(", start=963, len=1)
Token(kind=ud_identifier, text="a", start=964, len=1)
Token(kind=sm_percent, text="%", start=966, len=1)
Token(kind=ud_identifier, text="b", start=968, len=1)
Token(kind=sm_rparen, text=")", start=969, len=1)
Token(kind=ws_newline, text="\n", start=970, len=1)
#72: print(a % b)

Token(kind=ud_identifier, text="print", start=971, len=5)
Token(kind=sm_lparen, text="(", start=976, len=1)
Token(kind=ud_identifier, text="a", start=977, len=1)
Token(kind=sm_twostar, text="**", start=979, len=2)
Token(kind=ud_identifier, text="b", start=982, len=1)
Token(kind=sm_rparen, text=")", start=983, len=1)
Token(kind=ws_newline, text="\n", start=984, len=1)
#73: print(a ** b)

Token(kind=ud_comment, text="# TODO: matmul", start=985, len=14)
Token(kind=ws_newline, text="\n", start=999, len=1)
#74: # TODO: matmul

Token(kind=ws_newline, text="\n", start=1000, len=1)
#75: 

Token(kind=ud_comment, text="# in-place maths", start=1001, len=16)
Token(kind=ws_newline, text="\n", start=1017, len=1)
#76: # in-place maths

Token(kind=ud_identifier, text="i1", start=1018, len=2)
Token(kind=sm_pluseq, text="+=", start=1021, len=2)
Token(kind=ud_identifier, text="a", start=1024, len=1)
Token(kind=ws_newline, text="\n", start=1025, len=1)
#77: i1 += a

Token(kind=ud_identifier, text="i1", start=1026, len=2)
Token(kind=sm_minuseq, text="-=", start=1029, len=2)
Token(kind=ud_identifier, text="a", start=1032, len=1)
Token(kind=ws_newline, text="\n", start=1033, len=1)
#78: i1 -= a

Token(kind=ud_identifier, text="i1", start=1034, len=2)
Token(kind=sm_stareq, text="*=", start=1037, len=2)
Token(kind=ud_identifier, text="a", start=1040, len=1)
Token(kind=ws_newline, text="\n", start=1041, len=1)
#79: i1 *= a

Token(kind=ud_identifier, text="i1", start=1042, len=2)
Token(kind=sm_slasheq, text="/=", start=1045, len=2)
Token(kind=ud_identifier, text="a", start=1048, len=1)
Token(kind=ws_newline, text="\n", start=1049, len=1)
#80: i1 /= a

Token(kind=ud_identifier, text="i1", start=1050, len=2)
Token(kind=sm_twoslasheq, text="//=", start=1053, len=3)
Token(kind=ud_identifier, text="a", start=1057, len=1)
Token(kind=ws_newline, text="\n", start=1058, len=1)
#81: i1 //= a

Token(kind=ud_identifier, text="i1", start=1059, len=2)
Token(kind=sm_percenteq, text="%=", start=1062, len=2)
Token(kind=ud_identifier, text="a", start=1065, len=1)
Token(kind=ws_newline, text="\n", start=1066, len=1)
#82: i1 %= a

Token(kind=ud_identifier, text="i1", start=1067, len=2)
Token(kind=sm_twostareq, text="**=", start=1070, len=3)
Token(kind=ud_identifier, text="a", start=1074, len=1)
Token(kind=ws_newline, text="\n", start=1075, len=1)
#83: i1 **= a

Token(kind=ud_comment, text="# TODO: matmul", start=1076, len=14)
Token(kind=ws_newline, text="\n", start=1090, len=1)
#84: # TODO: matmul

Token(kind=ws_newline, text="\n", start=1091, len=1)
#85: 

Token(kind=ud_comment, text="# bitwise", start=1092, len=9)
Token(kind=ws_newline, text="\n", start=1101, len=1)
#86: # bitwise

Token(kind=ud_identifier, text="print", start=1102, len=5)
Token(kind=sm_lparen, text="(", start=1107, len=1)
Token(kind=sm_tilde, text="~", start=1108, len=1)
Token(kind=ud_identifier, text="a", start=1109, len=1)
Token(kind=sm_rparen, text=")", start=1110, len=1)
Token(kind=ws_newline, text="\n", start=1111, len=1)
#87: print(~a)

Token(kind=ud_identifier, text="print", start=1112, len=5)
Token(kind=sm_lparen, text="(", start=1117, len=1)
Token(kind=ud_identifier, text="a", start=1118, len=1)
Token(kind=sm_ampersand, text="&", start=1120, len=1)
Token(kind=ud_identifier, text="b", start=1122, len=1)
Token(kind=sm_rparen, text=")", start=1123, len=1)
Token(kind=ws_newline, text="\n", start=1124, len=1)
#88: print(a & b)

Token(kind=ud_identifier, text="print", start=1125, len=5)
Token(kind=sm_lparen, text="(", start=1130, len=1)
Token(kind=ud_identifier, text="a", start=1131, len=1)
Token(kind=sm_pipe, text="|", start=1133, len=1)
Token(kind=ud_identifier, text="b", start=1135, len=1)
Token(kind=sm_rparen, text=")", start=1136, len=1)
Token(kind=ws_newline, text="\n", start=1137, len=1)
#89: print(a | b)

Token(kind=ud_identifier, text="print", start=1138, len=5)
Token(kind=sm_lparen, text="(", start=1143, len=1)
Token(kind=ud_identifier, text="a", start=1144, len=1)
Token(kind=sm_hat, text="^", start=1146, len=1)
Token(kind=ud_identifier, text="b", start=1148, len=1)
Token(kind=sm_rparen, text=")", start=1149, len=1)
Token(kind=ws_newline, text="\n", start=1150, len=1)
#90: print(a ^ b)

Token(kind=ud_identifier, text="print", start=1151, len=5)
Token(kind=sm_lparen, text="(", start=1156, len=1)
Token(kind=ud_identifier, text="a", start=1157, len=1)
Token(kind=sm_lshift, text="<<", start=1159, len=2)
Token(kind=ud_identifier, text="b", start=1162, len=1)
Token(kind=sm_rparen, text=")", start=1163, len=1)
Token(kind=ws_newline, text="\n", start=1164, len=1)
#91: print(a << b)

Token(kind=ud_identifier, text="print", start=1165, len=5)
Token(kind=sm_lparen, text="(", start=1170, len=1)
Token(kind=ud_identifier, text="a", start=1171, len=1)
Token(kind=sm_rshift, text=">>", start=1173, len=2)
Token(kind=ud_identifier, text="b", start=1176, len=1)
Token(kind=sm_rparen, text=")", start=1177, len=1)
Token(kind=ws_newline, text="\n", start=1178, len=1)
#92: print(a >> b)

Token(kind=ws_newline, text="\n", start=1179, len=1)
#93: 

Token(kind=ud_comment, text="# in-place bitwise", start=1180, len=18)
Token(kind=ws_newline, text="\n", start=1198, len=1)
#94: # in-place bitwise

Token(kind=ud_identifier, text="i2", start=1199, len=2)
Token(kind=sm_ampersandeq, text="&=", start=1202, len=2)
Token(kind=ud_identifier, text="a", start=1205, len=1)
Token(kind=ws_newline, text="\n", start=1206, len=1)
#95: i2 &= a

Token(kind=ud_identifier, text="i2", start=1207, len=2)
Token(kind=sm_pipeeq, text="|=", start=1210, len=2)
Token(kind=ud_identifier, text="a", start=1213, len=1)
Token(kind=ws_newline, text="\n", start=1214, len=1)
#96: i2 |= a

Token(kind=ud_identifier, text="i2", start=1215, len=2)
Token(kind=sm_hateq, text="^=", start=1218, len=2)
Token(kind=ud_identifier, text="a", start=1221, len=1)
Token(kind=ws_newline, text="\n", start=1222, len=1)
#97: i2 ^= a

Token(kind=ud_identifier, text="i2", start=1223, len=2)
Token(kind=sm_lshifteq, text="<<=", start=1226, len=3)
Token(kind=ud_identifier, text="a", start=1230, len=1)
Token(kind=ws_newline, text="\n", start=1231, len=1)
#98: i2 <<= a

Token(kind=ud_identifier, text="i2", start=1232, len=2)
Token(kind=sm_rshifteq, text=">>=", start=1235, len=3)
Token(kind=ud_identifier, text="a", start=1239, len=1)
Token(kind=ws_newline, text="\n", start=1240, len=1)
#99: i2 >>= a

Token(kind=ws_newline, text="\n", start=1241, len=1)
#100: 

Token(kind=ud_comment, text="# identity", start=1242, len=10)
Token(kind=ws_newline, text="\n", start=1252, len=1)
#101: # identity

Token(kind=ud_identifier, text="print", start=1253, len=5)
Token(kind=sm_lparen, text="(", start=1258, len=1)
Token(kind=ud_identifier, text="a", start=1259, len=1)
Token(kind=kw_is, text="is", start=1261, len=2)
Token(kind=ud_identifier, text="b", start=1264, len=1)
Token(kind=sm_rparen, text=")", start=1265, len=1)
Token(kind=ws_newline, text="\n", start=1266, len=1)
#102: print(a is b)

Token(kind=ud_identifier, text="print", start=1267, len=5)
Token(kind=sm_lparen, text="(", start=1272, len=1)
Token(kind=ud_identifier, text="a", start=1273, len=1)
Token(kind=kw_is, text="is", start=1275, len=2)
Token(kind=kw_not, text="not", start=1278, len=3)
Token(kind=ud_identifier, text="b", start=1282, len=1)
Token(kind=sm_rparen, text=")", start=1283, len=1)
Token(kind=ws_newline, text="\n", start=1284, len=1)
#103: print(a is not b)

Token(kind=ws_newline, text="\n", start=1285, len=1)
#104: 

Token(kind=ud_comment, text="# collections", start=1286, len=13)
Token(kind=ws_newline, text="\n", start=1299, len=1)
#105: # collections

Token(kind=ud_identifier, text="print", start=1300, len=5)
Token(kind=sm_lparen, text="(", start=1305, len=1)
Token(kind=ud_identifier, text="a", start=1306, len=1)
Token(kind=kw_in, text="in", start=1308, len=2)
Token(kind=ud_identifier, text="c", start=1311, len=1)
Token(kind=sm_rparen, text=")", start=1312, len=1)
Token(kind=ws_newline, text="\n", start=1313, len=1)
#106: print(a in c)

Token(kind=ud_identifier, text="print", start=1314, len=5)
Token(kind=sm_lparen, text="(", start=1319, len=1)
Token(kind=ud_identifier, text="a", start=1320, len=1)
Token(kind=kw_not, text="not", start=1322, len=3)
Token(kind=kw_in, text="in", start=1326, len=2)
Token(kind=ud_identifier, text="c", start=1329, len=1)
Token(kind=sm_rparen, text=")", start=1330, len=1)
Token(kind=ws_newline, text="\n", start=1331, len=1)
#107: print(a not in c)

Token(kind=ud_identifier, text="print", start=1332, len=5)
Token(kind=sm_lparen, text="(", start=1337, len=1)
Token(kind=ud_identifier, text="c", start=1338, len=1)
Token(kind=sm_lbrack, text="[", start=1339, len=1)
Token(kind=ud_identifier, text="a", start=1340, len=1)
Token(kind=sm_rbrack, text="]", start=1341, len=1)
Token(kind=sm_rparen, text=")", start=1342, len=1)
Token(kind=ws_newline, text="\n", start=1343, len=1)
#108: print(c[a])

Token(kind=kw_del, text="del", start=1344, len=3)
Token(kind=ud_identifier, text="c", start=1348, len=1)
Token(kind=sm_lbrack, text="[", start=1349, len=1)
Token(kind=ud_identifier, text="a", start=1350, len=1)
Token(kind=sm_rbrack, text="]", start=1351, len=1)
Token(kind=ws_newline, text="\n", start=1352, len=1)
#109: del c[a]

Token(kind=ws_newline, text="\n", start=1353, len=1)
#110: 

Token(kind=ws_newline, text="\n", start=1354, len=1)
#111: 

Token(kind=ud_comment, text="# functions", start=1355, len=11)
Token(kind=ws_newline, text="\n", start=1366, len=1)
#112: # functions

Token(kind=kw_def, text="def", start=1367, len=3)
Token(kind=ud_identifier, text="add", start=1371, len=3)
Token(kind=sm_lparen, text="(", start=1374, len=1)
Token(kind=ud_identifier, text="a", start=1375, len=1)
Token(kind=sm_colon, text=":", start=1376, len=1)
Token(kind=ud_identifier, text="int", start=1378, len=3)
Token(kind=sm_comma, text=",", start=1381, len=1)
Token(kind=ud_identifier, text="b", start=1383, len=1)
Token(kind=sm_colon, text=":", start=1384, len=1)
Token(kind=ud_identifier, text="int", start=1386, len=3)
Token(kind=sm_rparen, text=")", start=1389, len=1)
Token(kind=sm_arrow, text="->", start=1391, len=2)
Token(kind=ud_identifier, text="int", start=1394, len=3)
Token(kind=sm_colon, text=":", start=1397, len=1)
Token(kind=ws_newline, text="\n", start=1398, len=1)
#113: def add(a: int, b: int) -> int:

Token(kind=ws_whitespace, text="    ", start=1399, len=4)
Token(kind=kw_return, text="return", start=1403, len=6)
Token(kind=ud_identifier, text="a", start=1410, len=1)
Token(kind=sm_plus, text="+", start=1412, len=1)
Token(kind=ud_identifier, text="b", start=1414, len=1)
Token(kind=ws_newline, text="\n", start=1415, len=1)
#114:     return a + b

Token(kind=ws_newline, text="\n", start=1416, len=1)
#115: 

Token(kind=ud_comment, text="# classes and decorators", start=1417, len=24)
Token(kind=ws_newline, text="\n", start=1441, len=1)
#116: # classes and decorators

Token(kind=sm_at, text="@", start=1442, len=1)
Token(kind=ud_identifier, text="dc", start=1443, len=2)
Token(kind=li_float, text=".", start=1445, len=1)
Token(kind=ud_identifier, text="dataclass", start=1446, len=9)
Token(kind=sm_lparen, text="(", start=1455, len=1)
Token(kind=ud_identifier, text="frozen", start=1456, len=6)
Token(kind=sm_eq, text="=", start=1462, len=1)
Token(kind=kw_true, text="True", start=1463, len=4)
Token(kind=sm_rparen, text=")", start=1467, len=1)
Token(kind=ws_newline, text="\n", start=1468, len=1)
#117: @dc.dataclass(frozen=True)

Token(kind=kw_class, text="class", start=1469, len=5)
Token(kind=ud_identifier, text="MyClass", start=1475, len=7)
Token(kind=sm_colon, text=":", start=1482, len=1)
Token(kind=ws_newline, text="\n", start=1483, len=1)
#118: class MyClass:

Token(kind=ws_whitespace, text="    ", start=1484, len=4)
Token(kind=ud_identifier, text="a", start=1488, len=1)
Token(kind=sm_colon, text=":", start=1489, len=1)
Token(kind=ud_identifier, text="int", start=1491, len=3)
Token(kind=ws_newline, text="\n", start=1494, len=1)
#119:     a: int

Token(kind=ws_whitespace, text="    ", start=1495, len=4)
Token(kind=ud_identifier, text="b", start=1499, len=1)
Token(kind=sm_colon, text=":", start=1500, len=1)
Token(kind=ud_identifier, text="bool", start=1502, len=4)
Token(kind=ws_newline, text="\n", start=1506, len=1)
#120:     b: bool

